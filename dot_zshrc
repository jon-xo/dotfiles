# If you come from bash you might have to change your $PATH.
export PATH=$PATH:"/mnt/c/Program Files (x86)/Microsoft Visual Studio/2019/Community/Common7/IDE:/home/jonn/.local/bin":$GRADLE_HOME/bin:/snap/bin

# Path to your oh-my-zsh installation.
export ZSH="/home/jonn/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
# ZSH_THEME="spaceship"

# Prompt Customization
# Overriden by Starship prompt
# SPACESHIP_PROMPT_ADD_NEWLINE="true"
# SPACESHIP_USER_SHOW="always"
# SPACESHIP_USER_COLOR="yellow"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git git-open)

source $ZSH/oh-my-zsh.sh

# User configuration
## WSL2 config
## Correct default windows startup path

if [[ $(pwd) == *"/mnt/c"* ]] || [[ $(pwd) == / ]]
then
    cd ~
fi

# export MANPATH="/usr/local/man:$MANPATH"

# Load in fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Type "fz" to open a directory using fzf
fz() {
	local dir
	dir=$(find ${1:-.} -path '*/\.*' -prune \
		-o -type d -print 2> /dev/null | fzf +m) &&
		cd "$dir"
}

# Remove duplicates from PATH
typeset -U PATH

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# General aliases
alias zconf="nvim ~/.zshrc"
alias ohmyzsh="nvim ~/.oh-my-zsh"
alias zsrc="source ~/.zshrc"
alias ll="ls -lah"
alias cmx="chmod 755"
alias cc="clear"
alias rmx="rm -rfv"
alias pathf="echo $PATH | tr ':' '\n'"
alias dtb="bash ~/bin/dot-files/dot-back.sh"

# git aliases

alias gs="git status"
alias gb="git branch"
alias gba="git branch -a"
alias gaw="git add ./*"
alias ga="git add"
alias gpo="git push origin "
alias glo="git pull origin "
setopt interactive_comments
preexec(){ _lc=$1; }
alias gm='git commit -m "${_lc#gm }" #'

# Function includes

# Download base .gitignore
gig() {
   curl https://build.jonxo.dev/env/git/gitignore > .gitignore
}

# Download base PR Template
gprt() {
   curl https://build.jonxo.dev/env/git/pr_template > PULL_REQUEST_TEMPLATE
}

# Create directory and change to new directory.
mg() {
  mkdir -p "$1" && cd -P $_
}
# cd one level
up() {
	for i in {1..$1};
	do

		cd ..
	done
}

## Test specificed git branch

ttb() {
    git fetch --all
    git checkout $1
    git pull origin $1
}

# Change the remote repository URL.
changeorigin () {
    git remote remove origin
    git remote add origin $1
}

## C# functions
### Create a new project

newt() {
   dotnet new console -n $1 -o .
}

hh() {
   history | grep $1 | sort -r | less
}

## Windows 
### Open file in VisualStudio

### Open directory/file in IntelliJ IDEA
### *Open Files from the Command Line - https://www.jetbrains.com/help/idea/opening-files-from-command-line.html

idea() {
   echo "Launching IntelliJ IDEA..."
   timeout --preserve-status 3 /mnt/c/Program\ Files/JetBrains/IntelliJ\ IDEA\ Community\ Edition\ 2021.2.2/bin/idea64.exe $1
   return 0
}

### Visual Studio 2019
vse() {	
   echo "Launching Visual Studio 2019..."
   timeout --preserve-status 3 /mnt/c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2019/Community/Common7/IDE/devenv.exe $1
   return 0
}

### Visual Studio 2022 Preview
vss() {	
   echo "Launching Visual Studio 2022..."
   timeout --preserve-status 3 /mnt/c/Program\ Files/Microsoft\ Visual\ Studio/2022/Preview/Common7/IDE/devenv.exe $1
   return 0   
}

### Set explicit browser alias for Chrome for Windows
BROWSER='/mnt/c/Program\ Files/Google/Chrome/Application/chrome.exe'

alias open="explorer.exe"

### Run C# program
alias dtr="dotnet run"

# SSH Passphrase fix for WSL2

alias keyz='eval `keychain --quiet --eval --agents ssh id_rsa`'

# Starship prompt
eval "$(starship init zsh)"

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"


export ANDROID_HOME=~/Android
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/platform-tools

export GRADLE_HOME=/opt/gradle/gradle-6.9.1

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
